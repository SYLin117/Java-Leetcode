
package leetcode.editor.en;

import java.math.BigDecimal;

class P1689PartitioningIntoMinimumNumberOfDeciBinaryNumbers {
    public static void main(String[] args) {
        // Solution solution = new P1689 Solution();
        Solution sol = new P1689PartitioningIntoMinimumNumberOfDeciBinaryNumbers().new Solution();
//        System.out.println(sol.minPartitions("32"));
        System.out.println(sol.minPartitions
//        System.out.println(sol.minPartitions("27346209830709182346"));
//        System.out.println(sol.minPartitions("3"));
    }

    //leetcode submit region begin(Prohibit modification and deletion)

    class Solution {
        // 參考: https://leetcode.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers/solutions/2202690/one-main-observation-interview-tips-java-explained/
        public int minPartitions(String n) {
            int max = Integer.MIN_VALUE;
            char charr[] = n.toCharArray();
            for(int i=0; i<charr.length; i++){
                if(max < charr[i]-'0')  max = charr[i]-'0';
            }
            return max;
        }
    }


//leetcode submit region end(Prohibit modification and deletion)

}